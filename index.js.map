{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import Mirror, {combineNested} from 'react-mirror'\nimport invariant from 'invariant'\nimport most from 'most'\n\nlet keyCounter = 0\n\nconst generateKey = () => {\n  keyCounter++\n  return keyCounter.toString(36)\n}\n\nconst clone = (collection, {empty, getIds, getValue, getKey, setValue, setKey}) => {\n  const result = empty()\n\n  getIds(collection)\n    .map(id => ({id, value: getValue(collection, id), key: getKey(collection, id)}))\n    .forEach(({id, value, key}) => {\n      setValue(result, id, value)\n      setKey(result, id, key || generateKey())\n    })\n\n  return result\n}\n\nconst CollectionController = Mirror({\n  name: 'COLLECTION',\n  state(mirror) {\n    const {\n      target,\n      empty,\n      getIds = collection => Object.keys(collection),\n      getValue = (collection, id) => collection[id] && collection[id].value,\n      getKey = (collection, id) => collection[id] && collection[id].key,\n      setValue = (collection, id, value) => {\n        if (!collection[id]) collection[id] = {}\n        collection[id].value = value\n      },\n      setKey = (collection, id, key) => {\n        if (!collection[id]) collection[id] = {}\n        collection[id].key = key\n      },\n      changed = (previous, current) => previous !== current,\n      reducer = (previous, {type, payload}) => payload,\n      cloneOn = {}\n    } = this.props\n\n    const config = {empty, getIds, getValue, getKey, setValue, setKey}\n\n    Object.assign(cloneOn, {transform: true, stateChange: true}, cloneOn)\n\n    invariant(target, 'target is required')\n    invariant(empty, 'empty is required')\n\n    let collection = empty()\n\n    mirror.$actions.forEach(({type}) => {\n      if (type === 'CLONE') collection = clone(collection)\n    })\n\n    const cursor = target(mirror)\n    cursor.$state.forEach(evt => console.log('state', evt))\n    cursor.$props.forEach(evt => console.log('props', evt))\n\n    return most.mergeArray([\n      combineNested({\n        state: cursor.$state,\n        props: cursor.$props\n      }).map(stores => {\n        const ids = getIds(collection)\n        const values = stores\n          .filter(\n            ({props, state}) =>\n              props &&\n              props.id &&\n              changed(getValue(collection, props.id), state) &&\n              (ids.includes(props.id) || ids.includes(String(props.id)))\n          )\n          .map(({props, state}) => ({\n            id: props.id,\n            value: reducer(getValue(collection, props.id), {\n              type: 'STATE_CHANGE',\n              payload: state\n            })\n          }))\n        if (cloneOn.stateChange) collection = clone(collection, config)\n        values.forEach(({id, value}) => setValue(collection, id, value))\n        return collection\n      }),\n      mirror.$actions.filter(({type}) => type === 'CLONE').map(() => {\n        collection = clone(collection)\n        return collection\n      }),\n      mirror.$actions\n        .filter(({type}) => type === 'TRANSFORM')\n        .map(({payload: transform}) => {\n          const next = transform(\n            cloneOn.transform ? clone(collection, config) : collection\n          )\n          getIds(next).forEach(id => {\n            const previous = getValue(collection, id)\n            const value = getValue(next, id)\n            if (changed(previous, value)) {\n              setValue(next, id, reducer(previous, {type: 'TRANSFORM', payload: value}))\n            }\n            if (!getKey(next, id)) {\n              setKey(next, id, generateKey())\n            }\n          })\n          collection = next\n          return next\n        })\n    ])\n  },\n  pure: {state: false}\n})()\n\nexport default CollectionController\n"],"names":["keyCounter","generateKey","toString","clone","collection","empty","getIds","getValue","getKey","setValue","setKey","result","map","id","value","key","forEach","CollectionController","Mirror","mirror","props","target","Object","keys","changed","previous","current","reducer","type","payload","cloneOn","config","assign","transform","stateChange","$actions","cursor","$state","console","log","evt","$props","most","mergeArray","combineNested","ids","values","stores","filter","state","includes","String","next"],"mappings":"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"}